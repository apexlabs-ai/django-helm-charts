apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "django.fullname" . }}
  labels:
    {{- include "django.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.web.replicaCount }}
  selector:
    matchLabels:
      {{- include "django.selectorLabels" . | nindent 6 }}
      role: web
  template:
    metadata:
      annotations:
        checksum/secret: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
        checksum/configmap: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        tag: "{{ .Values.image.tag }}"
      labels:
        {{- include "django.selectorLabels" . | nindent 8 }}
        role: web
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "django.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 5000
              protocol: TCP
          livenessProbe:
            failureThreshold: {{ .Values.web.livenessProbe.failureThreshold }}
            httpGet:
              path: /healthz/
              port: 5000
            initialDelaySeconds: {{ .Values.web.livenessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.web.livenessProbe.timeoutSeconds }}
          readinessProbe:
            failureThreshold: {{ .Values.web.readinessProbe.failureThreshold }}
            httpGet:
              path: /healthz/
              port: 5000
            initialDelaySeconds: {{ .Values.web.readinessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.web.readinessProbe.timeoutSeconds }}
          resources:
            {{- toYaml .Values.web.resources | nindent 12 }}
          env:
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: "/secrets/google-credentials.json"
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          envFrom:
            - secretRef:
                name: {{ include "django.fullname" . }}
            - configMapRef:
                name: {{ include "django.fullname" . }}
          volumeMounts:
            - name: secrets
              mountPath: /secrets
              readOnly: true
          command:
            - /start
      volumes:
        - name: secrets
          secret:
            secretName: {{ include "django.fullname" . }}
      {{- with .Values.web.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.web.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.web.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
