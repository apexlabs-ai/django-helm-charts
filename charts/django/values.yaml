image:
  repository:
  tag: latest
  pullPolicy: Always

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

secretKey:

databaseURL:
redisURL:
odooURL:
emailURL:
asteriskURL:

stripeLiveSecretKey:
djstripeWebhookSecret: 

environmentVariables:

web:
  replicaCount: 1
  hpa:
    enabled: false
    cputhreshold: 70
    minpods: 2
    maxpods: 4
  # budget:
  #  minAvailable: 1
  resources:
    {}
    # limits:
    #   cpu: 100m
    #   memory: 256Mi
    # requests:
    #   cpu: 50m
    #   memory: 128Mi
  nodeSelector: {}
  tolerations: []
  affinity: {}
  livenessProbe:
    failureThreshold: 5
    initialDelaySeconds: 5
    timeoutSeconds: 2
  readinessProbe:
    failureThreshold: 10
    initialDelaySeconds: 5
    timeoutSeconds: 2

worker:
  replicaCount: 1
  hpa:
    enabled: false
    cputhreshold: 90
    minpods: 1
    maxpods: 4
  resources:
    {}
    # limits:
    #   cpu: 500m
    #   memory: 256Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  nodeSelector: {}
  tolerations: []
  affinity: {}

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

redis:
  enabled: true
  master:
    persistence:
      enabled: false
  slave:
    persistence:
      enabled: false
  cluster:
    enabled: false
    slaveCount: 1

# Default to disabled, use a managed database service. But can be enabled here.
postgresql:
  enabled: false
